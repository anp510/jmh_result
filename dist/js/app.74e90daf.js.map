{"version":3,"file":"js/app.74e90daf.js","mappings":"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","sources":["webpack://dubbo-benchmark/./src/App.vue","webpack://dubbo-benchmark/./src/components/PullRequest.vue","webpack://dubbo-benchmark/src/components/PullRequest.vue","webpack://dubbo-benchmark/./src/components/PullRequest.vue?040a","webpack://dubbo-benchmark/./src/components/PullRequest.vue?0507","webpack://dubbo-benchmark/./src/components/ScheduledTask.vue","webpack://dubbo-benchmark/src/components/ScheduledTask.vue","webpack://dubbo-benchmark/./src/components/ScheduledTask.vue?666a","webpack://dubbo-benchmark/./src/components/ScheduledTask.vue?6a55","webpack://dubbo-benchmark/./src/components/TraceDetail.vue","webpack://dubbo-benchmark/src/components/TraceDetail.vue","webpack://dubbo-benchmark/./src/components/TraceDetail.vue?f143","webpack://dubbo-benchmark/./src/components/TraceDetail.vue?0a30","webpack://dubbo-benchmark/./src/components/RpcTask.vue","webpack://dubbo-benchmark/src/components/RpcTask.vue","webpack://dubbo-benchmark/./src/components/RpcTask.vue?e857","webpack://dubbo-benchmark/./src/components/RpcTask.vue?e164","webpack://dubbo-benchmark/./src/components/SerializationTask.vue","webpack://dubbo-benchmark/src/components/SerializationTask.vue","webpack://dubbo-benchmark/./src/components/SerializationTask.vue?fbcd","webpack://dubbo-benchmark/./src/components/SerializationTask.vue?35dd","webpack://dubbo-benchmark/./src/components/TriggerTraceDetail.vue","webpack://dubbo-benchmark/src/components/TriggerTraceDetail.vue","webpack://dubbo-benchmark/./src/components/TriggerTraceDetail.vue?2235","webpack://dubbo-benchmark/./src/components/TriggerTraceDetail.vue?6e01","webpack://dubbo-benchmark/src/App.vue","webpack://dubbo-benchmark/./src/App.vue?b19a","webpack://dubbo-benchmark/./src/App.vue?456c","webpack://dubbo-benchmark/./src/main.js","webpack://dubbo-benchmark/webpack/bootstrap","webpack://dubbo-benchmark/webpack/runtime/amd options","webpack://dubbo-benchmark/webpack/runtime/chunk loaded","webpack://dubbo-benchmark/webpack/runtime/compat get default export","webpack://dubbo-benchmark/webpack/runtime/define property getters","webpack://dubbo-benchmark/webpack/runtime/global","webpack://dubbo-benchmark/webpack/runtime/hasOwnProperty shorthand","webpack://dubbo-benchmark/webpack/runtime/make namespace object","webpack://dubbo-benchmark/webpack/runtime/node module decorator","webpack://dubbo-benchmark/webpack/runtime/jsonp chunk loading","webpack://dubbo-benchmark/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticStyle:{\"font-size\":\"30px\"}},[_vm._v(\"Dubbo 基准测试\")])])],1),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticStyle:{\"font-size\":\"15px\",\"text-align\":\"right\"}},[_vm._v(\"Ubuntu 2核4线程7GB内存\")])])],1),_c('el-row',[_c('el-divider',[_c('span',{staticStyle:{\"font-size\":\"20px\"}},[_vm._v(\"提交性能趋势\")])]),_c('el-col',{attrs:{\"span\":12}},[_c('PullRequest')],1),_c('el-col',{attrs:{\"span\":12}},[_c('ScheduledTask')],1)],1),_c('el-row',[_c('el-divider',[_c('span',{staticStyle:{\"font-size\":\"20px\"}},[_vm._v(\"相同场景对比\")])]),_c('el-col',{attrs:{\"span\":12}},[_c('RpcTask')],1),_c('el-col',{attrs:{\"span\":12}},[_c('SerializationTask')],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('TraceDetail')],1)],1),_c('el-row',{staticStyle:{\"margin-top\":\"100px\"}},[_c('el-divider',[_c('span',{staticStyle:{\"font-size\":\"20px\"}},[_vm._v(\"手动触发对比\")])]),_c('el-col',{attrs:{\"span\":24}},[_c('trigger-trace-detail')],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"PullRequestSample\"}}),_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"PullRequestThrpt\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div id=\"PullRequestSample\" style=\"width:100%;height:400px\"></div>\n    <div id=\"PullRequestThrpt\" style=\"width:100%;height:400px\"></div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'PullRequest',\n  data() {\n    return {\n      resultList: [],\n    }\n  },\n  mounted() {\n    this.init();\n    this.sampleEcharts();\n    this.thrptEcharts();\n  },\n  methods: {\n    init() {\n      let jmh;\n\n      this.$.ajax({\n        type: \"GET\",\n        async: false,\n        url: \"https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/pr/merged_results.json\",\n        success: function (res) {\n          jmh = res\n        }\n      });\n\n      try {\n        this.resultList = JSON.parse(jmh);\n      } catch (error) {\n        console.error(\"解析JMH结果字符串出错：\", error);\n      }\n    },\n\n    sampleEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('PullRequestSample'));\n\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = this.resultList\n          .filter(a => a.mode === 'sample')\n          // .filter(a => a.params['dubbo.protocol.serialization'] === 'hessian2')\n          // .filter(a => filterSerialization.includes(a.params.serialization) && filterProtocol.includes(a.params.protocol))\n          .reduce((acc, result) => {\n            let {time, serialization, protocol} = result.params;\n            let item = {\n              time: Number(time),\n              score: Math.round(result.primaryMetric.scorePercentiles['99.0'] * 1000),\n              serialization: serialization,\n              protocol: protocol,\n              commitId: result.commitId\n            };\n            let key = protocol + \"-\" + serialization;\n            if (!acc[key]) {\n              acc[key] = [];\n            }\n            acc[key].push(item);\n            return acc;\n          }, {});\n\n// 创建一个存储Template对象的数组\n      let templateList = {};\n\n      Object.entries(collect).forEach(([key, items]) => {\n        // 按时间升序排序\n        let sortedItems = items.sort((a, b) => a.time - b.time);\n\n        templateList[key] = {\n          time: sortedItems.map(i => i.time),\n          score: sortedItems.map(i => i.score),\n          commitId: sortedItems.map(i => i.commitId)\n        };\n      });\n\n// 使用时间类型的轴\n//       let xAxisData = Array.from(new Set([].concat(...Object.values(templateList).map(obj => obj.time)))).sort((a, b) => a - b);\n\n// 自定义时间轴的标签格式\n      function formatDate(timestamp) {\n        var date = new Date(timestamp);\n        return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n      }\n\n// 生成ECharts所需的series数据结构\n      let seriesData = Object.keys(templateList).map((key) => {\n        let data = templateList[key].time.map((time, index) => {\n          return {\n            name: formatDate(time),\n            value: [time, templateList[key].score[index], templateList[key].commitId[index]]\n          };\n        });\n        return {\n          name: key,\n          type: 'line',\n          showSymbol: true, // 显示标记点\n          hoverAnimation: false, // 关闭hover动画\n          symbolSize: 10, // 设置点的直径大小为10\n          markPoint: {\n            data: [\n              {type: 'max', name: 'Max'},\n              {type: 'min', name: 'Min'}\n            ]\n          },\n          markLine: {\n            data: [{type: 'average', name: 'Avg'}]\n          },\n          data: data\n        };\n      });\n\n// ECharts配置对象\n      let option = {\n        // animation: false,\n        title: {\n          text: '提交记录 P99',\n          x: 'center',\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            let res = params[0].axisValueLabel + '<br/>';\n            params.forEach(item => {\n              res += item.marker + \" \" + (item.data.value[2] !== null ? item.data.value[2] : '') + \"：\" + (item.data.value[1] !== null ? item.data.value[1] : '-') + 'ms<br/>';\n            });\n            return res;\n          }\n        },\n        // legend: {\n        //   data: Object.keys(templateList)\n        // },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'time',\n          boundaryGap: false\n        },\n        yAxis: {\n          type: 'value',\n          name: '耗时(ms)'\n        },\n        series: seriesData\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n    ,\n    thrptEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('PullRequestThrpt'));\n\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = this.resultList\n          .filter(a => a.mode === 'thrpt')\n          // .filter(a => a.params['dubbo.protocol.serialization'] === 'hessian2')\n          // .filter(a => filterSerialization.includes(a.params.serialization) && filterProtocol.includes(a.params.protocol))\n          .reduce((acc, result) => {\n            let {time, serialization, protocol} = result.params;\n            let item = {\n              time: Number(time),\n              score: Math.round(result.primaryMetric.scorePercentiles['99.0']),\n              serialization: serialization,\n              protocol: protocol\n            };\n            let key = protocol + \"-\" + serialization;\n            if (!acc[key]) {\n              acc[key] = [];\n            }\n            acc[key].push(item);\n            return acc;\n          }, {});\n\n// 创建一个存储Template对象的数组\n      let templateList = {};\n\n      Object.entries(collect).forEach(([key, items]) => {\n        // 按时间升序排序\n        let sortedItems = items.sort((a, b) => a.time - b.time);\n\n        templateList[key] = {\n          time: sortedItems.map(i => i.time),\n          score: sortedItems.map(i => i.score)\n        };\n      });\n\n// 使用时间类型的轴\n//       let xAxisData = Array.from(new Set([].concat(...Object.values(templateList).map(obj => obj.time)))).sort((a, b) => a - b);\n\n// 自定义时间轴的标签格式\n      function formatDate(timestamp) {\n        var date = new Date(timestamp);\n        return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n      }\n\n// 生成ECharts所需的series数据结构\n      let seriesData = Object.keys(templateList).map((key) => {\n        let data = templateList[key].time.map((time, index) => {\n          return {\n            name: formatDate(time),\n            value: [time, templateList[key].score[index]]\n          };\n        });\n        return {\n          name: key,\n          type: 'line',\n          showSymbol: true, // 显示标记点\n          hoverAnimation: false, // 关闭hover动画\n          symbolSize: 10, // 设置点的直径大小为10\n          markPoint: {\n            data: [\n              {type: 'max', name: 'Max'},\n              {type: 'min', name: 'Min'}\n            ]\n          },\n          markLine: {\n            data: [{type: 'average', name: 'Avg'}]\n          },\n          data: data\n        };\n      });\n\n// ECharts配置对象\n      let option = {\n        // animation: false,\n        title: {\n          text: '提交 QPS',\n          x: 'center',\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            let res = params[0].axisValueLabel + '<br/>';\n            params.forEach(item => {\n              res += item.marker + \" \" + (item.data.value[1] !== null ? item.data.value[1] : '-') + 'ops/s<br/>';\n            });\n            return res;\n          }\n        },\n        // legend: {\n        //   data: Object.keys(templateList)\n        // },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'time',\n          boundaryGap: false\n        },\n        yAxis: {\n          type: 'value',\n          name: 'ops/s'\n        },\n        series: seriesData\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./PullRequest.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./PullRequest.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./PullRequest.vue?vue&type=template&id=2e44c556&scoped=true\"\nimport script from \"./PullRequest.vue?vue&type=script&lang=js\"\nexport * from \"./PullRequest.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2e44c556\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"ScheduledTask\"}}),_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"ScheduledTaskThrpt\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div id=\"ScheduledTask\" style=\"width:100%;height:400px\"></div>\n    <div id=\"ScheduledTaskThrpt\" style=\"width:100%;height:400px\"></div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'ScheduledTask',\n  data() {\n    return {\n      resultList: [],\n    }\n  },\n  mounted() {\n    this.init();\n    this.sampleEcharts();\n    this.thrptEcharts();\n  },\n  methods: {\n    init() {\n      let jmh;\n\n      this.$.ajax({\n        type: \"GET\",\n        async: false,\n        url: \"https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/scheduled/merged_results.json\",\n        success: function (res) {\n          jmh = res\n        }\n      });\n\n      try {\n        this.resultList = JSON.parse(jmh);\n      } catch (error) {\n        console.error(\"解析JMH结果字符串出错：\", error);\n      }\n    },\n\n    sampleEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('ScheduledTask'));\n\n      // 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = this.resultList\n          .filter(a => a.mode === 'sample')\n          // .filter(a => a.params['dubbo.protocol.serialization'] === 'hessian2')\n          // .filter(a => filterSerialization.includes(a.params.serialization) && filterProtocol.includes(a.params.protocol))\n          .reduce((acc, result) => {\n            let {time, serialization, protocol} = result.params;\n            let item = {\n              time: Number(time),\n              score: Math.round(result.primaryMetric.scorePercentiles['99.0'] * 1000),\n              serialization: serialization,\n              protocol: protocol\n            };\n            let key = protocol + \"-\" + serialization;\n            if (!acc[key]) {\n              acc[key] = [];\n            }\n            acc[key].push(item);\n            return acc;\n          }, {});\n\n// 创建一个存储Template对象的数组\n      let templateList = {};\n\n      Object.entries(collect).forEach(([key, items]) => {\n        // 按时间升序排序\n        let sortedItems = items.sort((a, b) => a.time - b.time);\n\n        templateList[key] = {\n          time: sortedItems.map(i => i.time),\n          score: sortedItems.map(i => i.score)\n        };\n      });\n\n// 使用时间类型的轴\n//       let xAxisData = Array.from(new Set([].concat(...Object.values(templateList).map(obj => obj.time)))).sort((a, b) => a - b);\n\n// 自定义时间轴的标签格式\n      function formatDate(timestamp) {\n        var date = new Date(timestamp);\n        return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n      }\n\n// 生成ECharts所需的series数据结构\n      let seriesData = Object.keys(templateList).map((key) => {\n        let data = templateList[key].time.map((time, index) => {\n          return {\n            name: formatDate(time),\n            value: [time, templateList[key].score[index]]\n          };\n        });\n        return {\n          name: key,\n          type: 'line',\n          showSymbol: true, // 显示标记点\n          hoverAnimation: false, // 关闭hover动画\n          symbolSize: 10, // 设置点的直径大小为10\n          markPoint: {\n            data: [\n              {type: 'max', name: 'Max'},\n              {type: 'min', name: 'Min'}\n            ]\n          },\n          markLine: {\n            data: [{type: 'average', name: 'Avg'}]\n          },\n          data: data\n        };\n      });\n\n// ECharts配置对象\n      let option = {\n        // animation: false,\n        title: {\n          text: '定时 P99',\n          x: 'center',\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            let res = params[0].axisValueLabel + '<br/>';\n            params.forEach(item => {\n              res += item.marker + \" \" + (item.data.value[1] !== null ? item.data.value[1] : '-') + 'ms<br/>';\n            });\n            return res;\n          }\n        },\n        // legend: {\n        //   data: Object.keys(templateList)\n        // },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'time',\n          boundaryGap: false\n        },\n        yAxis: {\n          type: 'value',\n          name: '耗时(ms)'\n        },\n        series: seriesData\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n    ,\n    thrptEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('ScheduledTaskThrpt'));\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = this.resultList\n          .filter(a => a.mode === 'thrpt')\n          // .filter(a => a.params['dubbo.protocol.serialization'] === 'hessian2')\n          // .filter(a => filterSerialization.includes(a.params.serialization) && filterProtocol.includes(a.params.protocol))\n          .reduce((acc, result) => {\n            let {time, serialization, protocol} = result.params;\n            let item = {\n              time: Number(time),\n              score: Math.round(result.primaryMetric.scorePercentiles['99.0']),\n              serialization: serialization,\n              protocol: protocol\n            };\n            let key = protocol + \"-\" + serialization;\n            if (!acc[key]) {\n              acc[key] = [];\n            }\n            acc[key].push(item);\n            return acc;\n          }, {});\n\n// 创建一个存储Template对象的数组\n      let templateList = {};\n\n      Object.entries(collect).forEach(([key, items]) => {\n        // 按时间升序排序\n        let sortedItems = items.sort((a, b) => a.time - b.time);\n\n        templateList[key] = {\n          time: sortedItems.map(i => i.time),\n          score: sortedItems.map(i => i.score)\n        };\n      });\n\n// 使用时间类型的轴\n//       let xAxisData = Array.from(new Set([].concat(...Object.values(templateList).map(obj => obj.time)))).sort((a, b) => a - b);\n\n// 自定义时间轴的标签格式\n      function formatDate(timestamp) {\n        var date = new Date(timestamp);\n        return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n      }\n\n// 生成ECharts所需的series数据结构\n      let seriesData = Object.keys(templateList).map((key) => {\n        let data = templateList[key].time.map((time, index) => {\n          return {\n            name: formatDate(time),\n            value: [time, templateList[key].score[index]]\n          };\n        });\n        return {\n          name: key,\n          type: 'line',\n          showSymbol: true, // 显示标记点\n          hoverAnimation: false, // 关闭hover动画\n          symbolSize: 10, // 设置点的直径大小为10\n          markPoint: {\n            data: [\n              {type: 'max', name: 'Max'},\n              {type: 'min', name: 'Min'}\n            ]\n          },\n          markLine: {\n            data: [{type: 'average', name: 'Avg'}]\n          },\n          data: data\n        };\n      });\n\n// ECharts配置对象\n      let option = {\n        // animation: false,\n        title: {\n          text: '定时 QPS',\n          x: 'center',\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            let res = params[0].axisValueLabel + '<br/>';\n            params.forEach(item => {\n              res += item.marker + \" \" + (item.data.value[1] !== null ? item.data.value[1] : '-') + 'ops/s<br/>';\n            });\n            return res;\n          }\n        },\n        // legend: {\n        //   data: Object.keys(templateList)\n        // },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'time',\n          boundaryGap: false\n        },\n        yAxis: {\n          type: 'value',\n          name: 'ops/s'\n        },\n        series: seriesData\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./ScheduledTask.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./ScheduledTask.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ScheduledTask.vue?vue&type=template&id=55df43f4&scoped=true\"\nimport script from \"./ScheduledTask.vue?vue&type=script&lang=js\"\nexport * from \"./ScheduledTask.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"55df43f4\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-row',[_c('el-col',{attrs:{\"span\":6}},[_c('span',[_vm._v(\"选择两个配置对比\")]),_c('el-cascader',{attrs:{\"show-all-levels\":false,\"props\":_vm.props,\"options\":_vm.cascaderOptions,\"clearable\":\"\"},on:{\"change\":_vm.handleCascaderChange},model:{value:(_vm.selectedOptions),callback:function ($$v) {_vm.selectedOptions=$$v},expression:\"selectedOptions\"}})],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('el-header',[_c('h1',[_vm._v(_vm._s(_vm.leftTableTitle))])]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.leftTableDate,\"row-key\":\"spanId_\",\"border\":\"\",\"lazy\":\"\",\"default-expand-all\":\"\",\"tree-props\":{children: 'children'}}},[_c('el-table-column',{attrs:{\"prop\":\"operationName_\",\"label\":\"方法名\",\"min-width\":\"90%\"}}),_c('el-table-column',{attrs:{\"prop\":\"cost\",\"label\":\"耗时（ms）\",\"min-width\":\"10%\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-header',[_c('h1',[_vm._v(_vm._s(_vm.rightTableTitle))])]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.rightTableDate,\"row-key\":\"spanId_\",\"border\":\"\",\"lazy\":\"\",\"default-expand-all\":\"\",\"tree-props\":{children: 'children'}}},[_c('el-table-column',{attrs:{\"prop\":\"operationName_\",\"label\":\"方法名\",\"min-width\":\"90%\"}}),_c('el-table-column',{attrs:{\"prop\":\"cost\",\"label\":\"耗时（ms）\",\"min-width\":\"10%\"}})],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <el-row>\n      <el-col :span=\"6\">\n        <span>选择两个配置对比</span>\n        <el-cascader :show-all-levels=\"false\"\n                     :props=\"props\"\n                     v-model=\"selectedOptions\"\n                     :options=\"cascaderOptions\"\n                     @change=\"handleCascaderChange\"\n                     clearable>\n\n        </el-cascader>\n      </el-col>\n    </el-row>\n\n    <el-row>\n      <el-col :span=\"12\">\n        <el-header>\n          <h1>{{ leftTableTitle }}</h1>\n        </el-header>\n        <el-table\n            :data=\"leftTableDate\"\n            style=\"width: 100%\"\n            row-key=\"spanId_\"\n            border\n            lazy\n            default-expand-all\n            :tree-props=\"{children: 'children'}\"\n        >\n          <el-table-column prop=\"operationName_\" label=\"方法名\" min-width=\"90%\"></el-table-column>\n          <el-table-column prop=\"cost\" label=\"耗时（ms）\" min-width=\"10%\"></el-table-column>\n        </el-table>\n      </el-col>\n\n      <el-col :span=\"12\">\n        <el-header>\n          <h1>{{ rightTableTitle }}</h1>\n        </el-header>\n        <el-table\n            :data=\"rightTableDate\"\n            style=\"width: 100%\"\n            row-key=\"spanId_\"\n            border\n            lazy\n            default-expand-all\n            :tree-props=\"{children: 'children'}\"\n        >\n          <el-table-column prop=\"operationName_\" label=\"方法名\" min-width=\"90%\"></el-table-column>\n          <el-table-column prop=\"cost\" label=\"耗时（ms）\" min-width=\"10%\"></el-table-column>\n        </el-table>\n      </el-col>\n    </el-row>\n\n    <!--    <el-table :data=\"tableData\" border style=\"width: 100%\">-->\n    <!--      <el-table-column label=\"指标\" width=\"180\">-->\n    <!--        <template slot-scope=\"scope\">-->\n    <!--          {{ scope.row['dubbo.protocol.serialization'] }}-->\n    <!--        </template>-->\n    <!--      </el-table-column>-->\n    <!--      <el-table-column>-->\n    <!--        <template slot-scope=\"{row}\">-->\n    <!--          <el-table-->\n    <!--              :data=\"createSpanTree(row.spans_)\"-->\n    <!--              style=\"width: 100%\"-->\n    <!--              row-key=\"spanId_\"-->\n    <!--              border-->\n    <!--              lazy-->\n    <!--              :tree-props=\"{children: 'children'}\"-->\n    <!--          >-->\n    <!--            <el-table-column prop=\"operationName_\" label=\"日期\"></el-table-column>-->\n    <!--            <el-table-column prop=\"cost\" label=\"耗时（ms）\"></el-table-column>-->\n    <!--          </el-table>-->\n    <!--        </template>-->\n    <!--      </el-table-column>-->\n    <!--    </el-table>-->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TraceDetail',\n  data() {\n    return {\n      rpcTable: [],\n      serializationTable: [],\n      leftTableTitle: '',\n      leftTableDate: [],\n      rightTableDate: [],\n      rightTableTitle: '',\n\n      selectedOptions: [],\n      disabledRoots: [],\n      disabledChildren: [],\n      props: {multiple: true},\n      cascaderOptions: [{\n        value: 'rpc',\n        label: 'RPC 协议',\n        children: [{\n          value: 'dubbo',\n          label: 'Dubbo协议',\n        }, {\n          value: 'rmi',\n          label: 'Rmi协议'\n        }, {\n          value: 'tri',\n          label: 'Triple协议'\n        }]\n      }, {\n        value: 'serialization',\n        label: '序列化',\n        children: [{\n          value: 'hessian2',\n          label: 'Hessian2'\n        }, {\n          value: 'fastjson2',\n          label: 'Fastjson2'\n        },{\n          value: 'fastjson',\n          label: 'Fastjson'\n        },{\n          value: 'avro',\n          label: 'Avro'\n        },{\n          value: 'fst',\n          label: 'Fst'\n        },{\n          value: 'gson',\n          label: 'Gson'\n        },{\n          value: 'kryo',\n          label: 'Kryo'\n        }, {\n          value: 'msgpack',\n          label: 'Msgpack'\n        }]\n      }],\n      tmpCascaderOptions: [{\n        value: 'rpc',\n        label: 'RPC 协议',\n        children: [{\n          value: 'dubbo',\n          label: 'Dubbo协议',\n        }, {\n          value: 'rmi',\n          label: 'Rmi协议'\n        }, {\n          value: 'tri',\n          label: 'Triple协议'\n        }]\n      }, {\n        value: 'serialization',\n        label: '序列化',\n        children: [{\n          value: 'hessian2',\n          label: 'Hessian2'\n        }, {\n          value: 'fastjson2',\n          label: 'Fastjson2'\n        },{\n          value: 'fastjson',\n          label: 'Fastjson'\n        },{\n          value: 'avro',\n          label: 'Avro'\n        },{\n          value: 'fst',\n          label: 'Fst'\n        },{\n          value: 'gson',\n          label: 'Gson'\n        },{\n          value: 'kryo',\n          label: 'Kryo'\n        }, {\n          value: 'msgpack',\n          label: 'Msgpack'\n        }]\n      }]\n    };\n  },\n\n  mounted() {\n    this.initTable();\n    this.selectedOptions = [['serialization', 'hessian2'], ['serialization', 'fastjson2']]\n    this.handleCascaderChange(this.selectedOptions)\n  },\n\n  methods: {\n    initTable() {\n\n      let rpcResultList;\n      this.$.ajax({\n        type: \"GET\",\n        async: false,\n        url: \"https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/fixed/rpc/merged_prop_traces.json\",\n        success: function (res) {\n          rpcResultList = res\n        }\n      });\n\n      try {\n        this.rpcTable = JSON.parse(rpcResultList)\n        console.log(\"this.rpcTable\", this.rpcTable)\n      } catch (error) {\n        console.error(\"解析JMH结果字符串出错：\", error);\n      }\n\n      let serializationResultList;\n      this.$.ajax({\n        type: \"GET\",\n        async: false,\n        url: \"https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/fixed/serialization/merged_prop_traces.json\",\n        success: function (res) {\n          serializationResultList = res;\n        }\n      });\n\n      try {\n        this.serializationTable = JSON.parse(serializationResultList)\n        console.log(\"this.serializationResultList\", this.serializationTable)\n      } catch (error) {\n        console.error(\"解析JMH结果字符串出错：\", error);\n      }\n    }\n    ,\n\n    createSpanTree(spans) {\n      console.log(spans)\n      let spanMap = new Map();\n      let rootSpans = [];\n\n      // 遍历原始spans，初始化每个span，创建映射表和寻找根span\n      for (let span of spans) {\n        spanMap.set(span.spanId_, {\n          ...span,\n          spanId_: span.spanId_.toString(),\n          cost: span.endTime_ - span.startTime_,\n          children: []\n        });\n        if (span.parentSpanId_ === -1) {\n          rootSpans.push(spanMap.get(span.spanId_));\n        }\n      }\n\n      // 根据 parentSpanId_ 属性构建树结构\n      for (let span of spans) {\n        if (span.parentSpanId_ !== -1) {\n          let parentSpan = spanMap.get(span.parentSpanId_);\n          if (parentSpan) {\n            parentSpan.children.push(spanMap.get(span.spanId_));\n          }\n        }\n      }\n\n      console.log(rootSpans)\n      return rootSpans;\n    },\n\n    handleCascaderChange(value) {\n      console.log(\"this.value\", value)\n      console.log(\"this.selectedOptions\", this.selectedOptions)\n      let selectedRoot\n\n      this.cascaderOptions = this.deepCopy2DArray(this.tmpCascaderOptions)\n      if (value != null && value.length > 0) {\n        // 当用户选择一个根节点时，禁用其他根节点\n        selectedRoot = this.cascaderOptions.find(item => item.value === value[0][0]);\n      }\n\n      if (selectedRoot) {\n        this.disabledRoots = this.cascaderOptions\n            .filter(item => item.value !== selectedRoot.value)\n            .map(item => item.value);\n\n\n        if (value.length > 2) {\n\n          this.selectedOptions.splice(2)\n          value = this.selectedOptions\n          let myValue = value.map(item => item[1])\n          this.disabledChildren = selectedRoot.children.filter(((item, index) => index >= 2 && !myValue.includes(item.value))).map(item => item.value);\n\n        } else if (value.length === 2) {\n\n          let myValue = value.map(item => item[1])\n          this.disabledChildren = selectedRoot.children.filter(item => !myValue.includes(item.value)).map(item => item.value);\n\n        } else {\n\n          this.disabledChildren = []\n\n        }\n      } else {\n        // 如果用户取消了选择，或者选择了子节点，重置禁用状态\n        this.disabledRoots = [];\n        this.disabledChildren = []\n      }\n\n      this.updateCascaderOptions(selectedRoot);\n\n      this.updateTable();\n    },\n\n    updateCascaderOptions(selectedRoot) {\n      // 根据禁用状态数组，动态修改数据源\n      if (selectedRoot) {\n        selectedRoot.children = selectedRoot.children.map(item => ({\n          ...item,\n          disabled: this.disabledChildren.includes(item.value),\n        }));\n      }\n\n      this.cascaderOptions = this.cascaderOptions.map(item => ({\n        ...item,\n        disabled: this.disabledRoots.includes(item.value),\n      }));\n    },\n\n    deepCopy2DArray(arr) {\n      return JSON.parse(JSON.stringify(arr));\n    },\n\n    updateTable() {\n      if (this.selectedOptions == null || this.selectedOptions.length === 0) {\n        this.leftTableDate = []\n        this.rightTableDate = []\n\n        this.leftTableTitle = ''\n        this.rightTableTitle = ''\n\n        return\n      }\n\n      let type = this.selectedOptions[0][0];\n      let value = this.selectedOptions.map(item => item[1])\n\n      if (type === 'rpc') {\n        let leftRpcFilter = this.rpcTable.find(item => value[0] === JSON.parse(item.prop)['dubbo.protocol.name']);\n        let rightRpcFilter = this.rpcTable.find(item => value[1] === JSON.parse(item.prop)['dubbo.protocol.name']);\n\n        this.leftTableDate = leftRpcFilter ? this.createSpanTree(leftRpcFilter.spans_) : []\n        this.rightTableDate = rightRpcFilter ? this.createSpanTree(rightRpcFilter.spans_) : []\n\n        this.leftTableTitle = leftRpcFilter ? JSON.parse(leftRpcFilter.prop)['dubbo.protocol.name'] : ''\n        this.rightTableTitle = rightRpcFilter ? JSON.parse(rightRpcFilter.prop)['dubbo.protocol.name'] : ''\n      }\n\n      if (type === 'serialization') {\n        let leftSerializationFilter = this.serializationTable.find(item => value[0] === JSON.parse(item.prop)['dubbo.protocol.serialization']);\n        let rightSerializationFilter = this.serializationTable.find(item => value[1] === JSON.parse(item.prop)['dubbo.protocol.serialization']);\n\n        this.leftTableDate = leftSerializationFilter ? this.createSpanTree(leftSerializationFilter.spans_) : []\n        this.rightTableDate = rightSerializationFilter ? this.createSpanTree(rightSerializationFilter.spans_) : []\n\n        this.leftTableTitle = leftSerializationFilter ? JSON.parse(leftSerializationFilter.prop)['dubbo.protocol.serialization'] : ''\n        this.rightTableTitle = rightSerializationFilter ? JSON.parse(rightSerializationFilter.prop)['dubbo.protocol.serialization'] : ''\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./TraceDetail.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./TraceDetail.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TraceDetail.vue?vue&type=template&id=81f8100e&scoped=true\"\nimport script from \"./TraceDetail.vue?vue&type=script&lang=js\"\nexport * from \"./TraceDetail.vue?vue&type=script&lang=js\"\nimport style0 from \"./TraceDetail.vue?vue&type=style&index=0&id=81f8100e&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"81f8100e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"RpcTaskP99\"}}),_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"RpcTaskQPS\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div id=\"RpcTaskP99\" style=\"width:100%;height:400px\"></div>\n    <div id=\"RpcTaskQPS\" style=\"width:100%;height:400px\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RpcTask',\n  data() {\n    return {\n      resultList: [],\n    }\n  },\n  mounted() {\n    this.init();\n    this.sampleEcharts();\n    this.thrptEcharts();\n  },\n  methods: {\n    init() {\n\n// 获取JMH结果字符串\n      let jmh;\n      this.$.ajax({\n        type: 'GET',\n        async: false,\n        url: 'https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/fixed/rpc/merged_prop_results.json',\n        success: function (res) {\n          jmh = res;\n        }\n      });\n\n\n      try {\n        this.resultList = JSON.parse(jmh);\n      } catch (error) {\n        console.error('解析JMH结果字符串出错：', error);\n      }\n\n    },\n    sampleEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('RpcTaskP99'));\n\n\n      let time = this.resultList[0].params.time\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = this.resultList\n          .filter((a) => a.mode === 'sample')\n          .map((result) => {\n            // 注意这里只用一个参数接收当前元素\n            let protocol = JSON.parse(result.params.prop)['dubbo.protocol.name'];\n            return {\n              score: Math.round(result.primaryMetric.scorePercentiles['99.0'] * 1000),\n              protocol: protocol\n            };\n          });\n\n      // let seriesDate = collect.map((result) => {\n      //   // 注意这里只用一个参数接收当前元素\n      //   return {\n      //     type: 'bar'\n      //   };\n      // });\n      //\n      // console.log(collect);\n      // console.log(seriesDate);\n\n      let option = {\n        title: {\n          text: 'RPC协议 P99对比',\n          x: 'center',\n          subtext: this.timestampToTime(time)\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'none'\n          },\n          formatter: function (params) {\n            return params[0].data.score + 'ms';\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          type: 'value',\n          name: '耗时(ms)'\n        },\n        dataset: {\n          dimensions: ['protocol', 'score'],\n          source: collect\n        },\n        series: [\n          {\n            barWidth: '35%',\n            type: 'bar',\n            label: {\n              //柱体上显示数值\n              show: true, //开启显示\n              position: 'top', //在上方显示\n              textStyle: {\n                //数值样式\n                fontSize: '30px',\n                color: '#666'\n              },\n            }\n          }\n        ]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    },\n    thrptEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('RpcTaskQPS'));\n\n\n      let time = this.resultList[0].params.time\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = this.resultList\n          .filter((a) => a.mode === 'thrpt')\n          .map((result) => {\n            // 注意这里只用一个参数接收当前元素\n            let protocol = JSON.parse(result.params.prop)['dubbo.protocol.name'];\n            return {\n              score: Math.round(result.primaryMetric.scorePercentiles['99.0']),\n              protocol: protocol\n            };\n          });\n\n      // let seriesDate = collect.map((result) => {\n      //   // 注意这里只用一个参数接收当前元素\n      //   return {\n      //     type: 'bar'\n      //   };\n      // });\n      //\n      // console.log(collect);\n      // console.log(seriesDate);\n\n      let option = {\n        title: {\n          text: 'RPC协议 QPS对比',\n          x: 'center',\n          subtext: this.timestampToTime(time)\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'none'\n          },\n          formatter: function (params) {\n            return params[0].data.score + 'ops/s';\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          type: 'value',\n          name: 'ops/s'\n        },\n        dataset: {\n          dimensions: ['protocol', 'score'],\n          source: collect\n        },\n        series: [\n          {\n            barWidth: '35%',\n            type: 'bar',\n            label: {\n              //柱体上显示数值\n              show: true, //开启显示\n              position: 'top', //在上方显示\n              textStyle: {\n                //数值样式\n                fontSize: '30px',\n                color: '#666'\n              },\n            }\n          }\n        ]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    },\n    timestampToTime(timestamp) {\n      let date = new Date(Number(timestamp));\n      let Y = date.getFullYear() + '-';\n      let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n      let D = date.getDate() + ' ';\n      let h = date.getHours() + ':';\n      let m = date.getMinutes() + ':';\n      let s = date.getSeconds();\n\n      return Y + M + D + h + m + s;\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./RpcTask.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./RpcTask.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./RpcTask.vue?vue&type=template&id=56999342&scoped=true\"\nimport script from \"./RpcTask.vue?vue&type=script&lang=js\"\nexport * from \"./RpcTask.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"56999342\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"SerializationTaskP99\"}}),_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"SerializationTaskQPS\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div id=\"SerializationTaskP99\" style=\"width:100%;height:400px\"></div>\n    <div id=\"SerializationTaskQPS\" style=\"width:100%;height:400px\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RpcTask',\n  data() {\n    return {\n      resultList: [],\n    }\n  },\n  mounted() {\n    this.init();\n    this.sampleEcharts();\n    this.thrptEcharts();\n  },\n  methods: {\n    init() {\n\n// 获取JMH结果字符串\n      let jmh;\n      this.$.ajax({\n        type: 'GET',\n        async: false,\n        url: 'https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/fixed/serialization/merged_prop_results.json',\n        success: function (res) {\n          jmh = res;\n        }\n      });\n\n\n      try {\n        this.resultList = JSON.parse(jmh);\n      } catch (error) {\n        console.error('解析JMH结果字符串出错：', error);\n      }\n\n    },\n    sampleEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('SerializationTaskP99'));\n\n\n      let time = this.resultList[0].params.time\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = this.resultList\n          .filter((a) => a.mode === 'sample')\n          .map((result) => {\n            // 注意这里只用一个参数接收当前元素\n            let protocol = JSON.parse(result.params.prop)['dubbo.protocol.serialization'];\n            return {\n              score: Math.round(result.primaryMetric.scorePercentiles['99.0'] * 1000),\n              protocol: protocol\n            };\n          });\n\n      // let seriesDate = collect.map((result) => {\n      //   // 注意这里只用一个参数接收当前元素\n      //   return {\n      //     type: 'bar'\n      //   };\n      // });\n      //\n      // console.log(collect);\n      // console.log(seriesDate);\n\n      let option = {\n        title: {\n          text: '序列化协议 P99对比',\n          x: 'center',\n          subtext: this.timestampToTime(time)\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'none'\n          },\n          formatter: function (params) {\n            return params[0].data.score + 'ms';\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          type: 'value',\n          name: '耗时(ms)'\n        },\n        dataset: {\n          dimensions: ['protocol', 'score'],\n          source: collect\n        },\n        series: [\n          {\n            type: 'bar',\n            label: {\n              //柱体上显示数值\n              show: true, //开启显示\n              position: 'top', //在上方显示\n              textStyle: {\n                //数值样式\n                fontSize: '30px',\n                color: '#666'\n              },\n            }\n          }\n        ]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    },\n    thrptEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('SerializationTaskQPS'));\n\n\n      let time = this.resultList[0].params.time\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = this.resultList\n          .filter((a) => a.mode === 'thrpt')\n          .map((result) => {\n            // 注意这里只用一个参数接收当前元素\n            let protocol = JSON.parse(result.params.prop)['dubbo.protocol.serialization'];\n            return {\n              score: Math.round(result.primaryMetric.scorePercentiles['99.0']),\n              protocol: protocol\n            };\n          });\n\n      // let seriesDate = collect.map((result) => {\n      //   // 注意这里只用一个参数接收当前元素\n      //   return {\n      //     type: 'bar'\n      //   };\n      // });\n      //\n      // console.log(collect);\n      // console.log(seriesDate);\n\n      let option = {\n        title: {\n          text: '序列化协议 QPS对比',\n          x: 'center',\n          subtext: this.timestampToTime(time)\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'none'\n          },\n          formatter: function (params) {\n            return params[0].data.score + 'ops/s';\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          type: 'value',\n          name: 'ops/s'\n        },\n        dataset: {\n          dimensions: ['protocol', 'score'],\n          source: collect\n        },\n        series: [\n          {\n            type: 'bar',\n            label: {\n              //柱体上显示数值\n              show: true, //开启显示\n              position: 'top', //在上方显示\n              textStyle: {\n                //数值样式\n                fontSize: '30px',\n                color: '#666'\n              },\n            }\n          }\n        ]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    },\n    timestampToTime(timestamp) {\n      let date = new Date(Number(timestamp));\n      let Y = date.getFullYear() + '-';\n      let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n      let D = date.getDate() + ' ';\n      let h = date.getHours() + ':';\n      let m = date.getMinutes() + ':';\n      let s = date.getSeconds();\n\n      return Y + M + D + h + m + s;\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./SerializationTask.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./SerializationTask.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SerializationTask.vue?vue&type=template&id=1f5aff10&scoped=true\"\nimport script from \"./SerializationTask.vue?vue&type=script&lang=js\"\nexport * from \"./SerializationTask.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1f5aff10\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-row',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.open}},[_vm._v(\"触发Actions\")])],1),_c('el-row',[_c('el-col',{attrs:{\"span\":6}},[_c('span',[_vm._v(\"选择具体配置\")]),_c('el-cascader',{attrs:{\"options\":_vm.cascaderOptions,\"clearable\":\"\"},model:{value:(_vm.leftSelectedOptions),callback:function ($$v) {_vm.leftSelectedOptions=$$v},expression:\"leftSelectedOptions\"}}),_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"TriggerP99\"}})],1),_c('el-col',{attrs:{\"span\":6}},[_c('span',[_vm._v(\"选择具体配置\")]),_c('el-cascader',{attrs:{\"options\":_vm.cascaderOptions,\"clearable\":\"\"},model:{value:(_vm.rightSelectedOptions),callback:function ($$v) {_vm.rightSelectedOptions=$$v},expression:\"rightSelectedOptions\"}}),_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"TriggerQps\"}})],1),_c('el-col',{attrs:{\"span\":6}},[_c('el-header',[_c('h1',[_vm._v(_vm._s(_vm.leftTableTitle))])]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.leftTableDate,\"row-key\":\"spanId_\",\"border\":\"\",\"lazy\":\"\",\"default-expand-all\":\"\",\"tree-props\":{children: 'children'}}},[_c('el-table-column',{attrs:{\"prop\":\"operationName_\",\"label\":\"方法名\",\"min-width\":\"90%\"}}),_c('el-table-column',{attrs:{\"prop\":\"cost\",\"label\":\"耗时（ms）\",\"min-width\":\"10%\"}})],1)],1),_c('el-col',{attrs:{\"span\":6}},[_c('el-header',[_c('h1',[_vm._v(_vm._s(_vm.rightTableTitle))])]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.rightTableDate,\"row-key\":\"spanId_\",\"border\":\"\",\"lazy\":\"\",\"default-expand-all\":\"\",\"tree-props\":{children: 'children'}}},[_c('el-table-column',{attrs:{\"prop\":\"operationName_\",\"label\":\"方法名\",\"min-width\":\"90%\"}}),_c('el-table-column',{attrs:{\"prop\":\"cost\",\"label\":\"耗时（ms）\",\"min-width\":\"10%\"}})],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <el-row>\n      <el-button type=\"primary\" @click=\"open\">触发Actions</el-button>\n    </el-row>\n\n    <el-row>\n      <el-col :span=\"6\">\n        <span>选择具体配置</span>\n        <el-cascader v-model=\"leftSelectedOptions\"\n                     :options=\"cascaderOptions\"\n                     clearable>\n\n        </el-cascader>\n        <div id=\"TriggerP99\" style=\"width:100%;height:400px\"></div>\n      </el-col>\n      <el-col :span=\"6\">\n        <span>选择具体配置</span>\n        <el-cascader v-model=\"rightSelectedOptions\"\n                     :options=\"cascaderOptions\"\n                     clearable>\n\n        </el-cascader>\n        <div id=\"TriggerQps\" style=\"width:100%;height:400px\"></div>\n      </el-col>\n\n      <el-col :span=\"6\">\n        <el-header>\n          <h1>{{ leftTableTitle }}</h1>\n        </el-header>\n        <el-table\n            :data=\"leftTableDate\"\n            style=\"width: 100%\"\n            row-key=\"spanId_\"\n            border\n            lazy\n            default-expand-all\n            :tree-props=\"{children: 'children'}\"\n        >\n          <el-table-column prop=\"operationName_\" label=\"方法名\" min-width=\"90%\"></el-table-column>\n          <el-table-column prop=\"cost\" label=\"耗时（ms）\" min-width=\"10%\"></el-table-column>\n        </el-table>\n      </el-col>\n\n      <el-col :span=\"6\">\n        <el-header>\n          <h1>{{ rightTableTitle }}</h1>\n        </el-header>\n        <el-table\n            :data=\"rightTableDate\"\n            style=\"width: 100%\"\n            row-key=\"spanId_\"\n            border\n            lazy\n            default-expand-all\n            :tree-props=\"{children: 'children'}\"\n        >\n          <el-table-column prop=\"operationName_\" label=\"方法名\" min-width=\"90%\"></el-table-column>\n          <el-table-column prop=\"cost\" label=\"耗时（ms）\" min-width=\"10%\"></el-table-column>\n        </el-table>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TriggerTraceDetail',\n  data() {\n    return {\n      triggerTable: [],\n\n      leftTableTitle: '',\n      leftTableDate: [],\n      rightTableDate: [],\n      rightTableTitle: '',\n\n      leftSelectedOptions: [],\n      rightSelectedOptions: [],\n\n      resultList: [],\n\n      cascaderOptions: [{\n        value: 'dubbo',\n        label: 'Dubbo协议',\n        children: [{\n          value: 'hessian2',\n          label: 'Hessian2'\n        }, {\n          value: 'fastjson2',\n          label: 'Fastjson2'\n        }, {\n          value: 'fastjson',\n          label: 'Fastjson'\n        }, {\n          value: 'avro',\n          label: 'Avro'\n        }, {\n          value: 'fst',\n          label: 'Fst'\n        }, {\n          value: 'gson',\n          label: 'Gson'\n        }, {\n          value: 'kryo',\n          label: 'Kryo'\n        }, {\n          value: 'msgpack',\n          label: 'Msgpack'\n        }]\n      }, {\n        value: 'rmi',\n        label: 'Rmi协议',\n        children: [{\n          value: 'hessian2',\n          label: 'Hessian2'\n        }, {\n          value: 'fastjson2',\n          label: 'Fastjson2'\n        }, {\n          value: 'fastjson',\n          label: 'Fastjson'\n        }, {\n          value: 'avro',\n          label: 'Avro'\n        }, {\n          value: 'fst',\n          label: 'Fst'\n        }, {\n          value: 'gson',\n          label: 'Gson'\n        }, {\n          value: 'kryo',\n          label: 'Kryo'\n        }, {\n          value: 'msgpack',\n          label: 'Msgpack'\n        }]\n      }, {\n        value: 'tri',\n        label: 'Triple协议',\n        children: [{\n          value: 'hessian2',\n          label: 'Hessian2'\n        }, {\n          value: 'fastjson2',\n          label: 'Fastjson2'\n        }, {\n          value: 'fastjson',\n          label: 'Fastjson'\n        }, {\n          value: 'avro',\n          label: 'Avro'\n        }, {\n          value: 'fst',\n          label: 'Fst'\n        }, {\n          value: 'gson',\n          label: 'Gson'\n        }, {\n          value: 'kryo',\n          label: 'Kryo'\n        }, {\n          value: 'msgpack',\n          label: 'Msgpack'\n        }]\n      }],\n    };\n  },\n\n  mounted() {\n    try {\n      this.init();\n    } catch (error) {\n      console.error(\"init：\", error);\n    }\n    try {\n      this.initTable();\n    } catch (error) {\n      console.error(\"initTable：\", error);\n    }\n    try {\n      this.sampleEcharts();\n    } catch (error) {\n      console.error(\"sampleEcharts：\", error);\n    }\n    try {\n      this.thrptEcharts();\n    } catch (error) {\n      console.error(\"thrptEcharts：\", error);\n    }\n  },\n\n  methods: {\n    init() {\n      let jmh;\n\n      this.$.ajax({\n        type: \"GET\",\n        async: false,\n        url: \"https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/scenario/merged_prop_results.json\",\n        success: function (res) {\n          jmh = res\n        }\n      });\n\n      try {\n        this.resultList = JSON.parse(jmh);\n      } catch (error) {\n        console.error(\"解析JMH结果字符串出错：\", error);\n      }\n    },\n\n    sampleEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('TriggerP99'));\n\n      let time = this.resultList[0].params.time\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = this.resultList\n          .filter((a) => a.mode === 'sample')\n          .map((result) => {\n            // 注意这里只用一个参数接收当前元素\n            let protocol = JSON.parse(result.params.prop)['dubbo.protocol.name'];\n            let serialization = JSON.parse(result.params.prop)['dubbo.protocol.serialization']\n            return {\n              score: Math.round(result.primaryMetric.scorePercentiles['99.0'] * 1000),\n              protocol: protocol + \"-\" + serialization\n            };\n          });\n\n      // let seriesDate = collect.map((result) => {\n      //   // 注意这里只用一个参数接收当前元素\n      //   return {\n      //     type: 'bar'\n      //   };\n      // });\n      //\n      // console.log(collect);\n      // console.log(seriesDate);\n\n      let option = {\n        title: {\n          text: 'P99对比',\n          x: 'center',\n          subtext: this.timestampToTime(time)\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'none'\n          },\n          formatter: function (params) {\n            return params[0].data.score + 'ms';\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          type: 'value',\n          name: '耗时(ms)'\n        },\n        dataset: {\n          dimensions: ['protocol', 'score'],\n          source: collect\n        },\n        series: [\n          {\n            barWidth: '25%',\n            type: 'bar',\n            label: {\n              //柱体上显示数值\n              show: true, //开启显示\n              position: 'top', //在上方显示\n              textStyle: {\n                //数值样式\n                fontSize: '30px',\n                color: '#666'\n              },\n            }\n          }\n        ]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    },\n\n    thrptEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('TriggerQps'));\n\n      let time = this.resultList[0].params.time\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = this.resultList\n          .filter((a) => a.mode === 'thrpt')\n          .map((result) => {\n            // 注意这里只用一个参数接收当前元素\n            let protocol = JSON.parse(result.params.prop)['dubbo.protocol.name'];\n            let serialization = JSON.parse(result.params.prop)['dubbo.protocol.serialization']\n            return {\n              score: Math.round(result.primaryMetric.scorePercentiles['99.0']),\n              protocol: protocol + \"-\" + serialization\n            };\n          });\n\n      // let seriesDate = collect.map((result) => {\n      //   // 注意这里只用一个参数接收当前元素\n      //   return {\n      //     type: 'bar'\n      //   };\n      // });\n      //\n      // console.log(collect);\n      // console.log(seriesDate);\n\n      let option = {\n        title: {\n          text: 'QPS对比',\n          x: 'center',\n          subtext: this.timestampToTime(time)\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'none'\n          },\n          formatter: function (params) {\n            return params[0].data.score + 'ops/s';\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          type: 'value',\n          name: 'ops/s'\n        },\n        dataset: {\n          dimensions: ['protocol', 'score'],\n          source: collect\n        },\n        series: [\n          {\n            barWidth: '25%',\n            type: 'bar',\n            label: {\n              //柱体上显示数值\n              show: true, //开启显示\n              position: 'top', //在上方显示\n              textStyle: {\n                //数值样式\n                fontSize: '30px',\n                color: '#666'\n              },\n            }\n          }\n        ]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    },\n\n    timestampToTime(timestamp) {\n      let date = new Date(Number(timestamp));\n      let Y = date.getFullYear() + '-';\n      let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n      let D = date.getDate() + ' ';\n      let h = date.getHours() + ':';\n      let m = date.getMinutes() + ':';\n      let s = date.getSeconds();\n\n      return Y + M + D + h + m + s;\n    },\n    initTable() {\n\n      let rpcResultList;\n      this.$.ajax({\n        type: \"GET\",\n        async: false,\n        url: \"https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/scenario/merged_prop_traces.json\",\n        success: function (res) {\n          rpcResultList = res\n        }\n      });\n\n      try {\n        this.triggerTable = JSON.parse(rpcResultList)\n        console.log(\"this.rpcTable\", this.triggerTable)\n      } catch (error) {\n        console.error(\"解析JMH结果字符串出错：\", error);\n      }\n\n      this.leftTableDate = this.createSpanTree(this.triggerTable != null && this.triggerTable.length > 0 ? this.triggerTable[0].spans_ : [])\n      this.rightTableDate = this.createSpanTree(this.triggerTable != null && this.triggerTable.length > 1 ? this.triggerTable[1].spans_ : [])\n\n      this.leftTableTitle = this.triggerTable != null && this.triggerTable.length > 0 ? this.triggerTable[0].prop : \"\"\n      this.rightTableTitle = this.triggerTable != null && this.triggerTable.length > 1 ? this.triggerTable[1].prop : \"\"\n    }\n    ,\n\n    createSpanTree(spans) {\n      console.log(spans)\n      let spanMap = new Map();\n      let rootSpans = [];\n\n      // 遍历原始spans，初始化每个span，创建映射表和寻找根span\n      for (let span of spans) {\n        spanMap.set(span.spanId_, {\n          ...span,\n          spanId_: span.spanId_.toString(),\n          cost: span.endTime_ - span.startTime_,\n          children: []\n        });\n        if (span.parentSpanId_ === -1) {\n          rootSpans.push(spanMap.get(span.spanId_));\n        }\n      }\n\n      // 根据 parentSpanId_ 属性构建树结构\n      for (let span of spans) {\n        if (span.parentSpanId_ !== -1) {\n          let parentSpan = spanMap.get(span.parentSpanId_);\n          if (parentSpan) {\n            parentSpan.children.push(spanMap.get(span.spanId_));\n          }\n        }\n      }\n\n      console.log(rootSpans)\n      return rootSpans;\n    },\n\n    open() {\n      if ((this.leftSelectedOptions == null || this.leftSelectedOptions.length === 0) && (this.rightSelectedOptions == null || this.rightSelectedOptions.length === 0)) {\n        this.$message({\n          type: 'warning',\n          message: '请选择至少一个'\n        });\n        return\n      }\n\n      let leftRpc = null;\n      let leftSerialization = null;\n\n      console.log(this.leftSelectedOptions)\n      if (this.leftSelectedOptions.length > 0) {\n        leftRpc = this.leftSelectedOptions[0]\n        leftSerialization = this.leftSelectedOptions[1]\n      }\n\n      let rightRpc = null;\n      let rightSerialization = null;\n      if (this.rightSelectedOptions.length > 0) {\n        rightRpc = this.rightSelectedOptions[0]\n        rightSerialization = this.rightSelectedOptions[1]\n      }\n\n      const h = this.$createElement;\n\n      this.$msgbox({\n        title: '消息',\n        message: h('p', null, [\n          h('p', null, \"左边内容：rpc协议：\" + (leftRpc == null ? \"\" : leftRpc) + \"序列化：\" + (leftSerialization == null ? \"\" : leftSerialization)),\n          h('p', null, \"右边内容：rpc协议：\" + (rightRpc == null ? \"\" : rightRpc) + \"序列化：\" + (rightSerialization == null ? \"\" : rightSerialization)),\n        ]),\n        showCancelButton: true,\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        beforeClose: (action, instance, done) => {\n          if (action === 'confirm') {\n            let leftSendDate = \"\"\n            if (leftRpc) {\n              leftSendDate += \"dubbo.protocol.name|\" + leftRpc;\n            }\n            if (leftSerialization) {\n              if (leftRpc) {\n                leftSendDate += \"|\";\n              }\n              leftSendDate += \"dubbo.protocol.serialization|\" + leftSerialization;\n            }\n\n            let rightSendDate = \"\"\n            if (rightRpc) {\n              rightSendDate += \"dubbo.protocol.name|\" + rightRpc;\n            }\n            if (rightSerialization) {\n              if (rightRpc) {\n                rightSendDate += \"|\";\n              }\n              rightSendDate += \"dubbo.protocol.serialization|\" + rightSerialization;\n            }\n\n            let prop = leftSendDate + (leftSendDate ? \"@\" : \"\") + rightSendDate;\n\n            instance.confirmButtonLoading = true;\n            instance.confirmButtonText = '执行中...';\n            this.$.ajax({\n              url: \"https://api.github.com/repos/wxbty/dubbo/dispatches\",\n              type: \"POST\",\n              beforeSend: function (xhr) {\n                xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(\"username: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\"));\n                xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n                xhr.setRequestHeader(\"Accept\", \"application/vnd.github.everest-preview+json\");\n              },\n              data: JSON.stringify({\n                \"event_type\": \"manual-trigger\",\n                \"client_payload\": {\n                  \"prop\": prop\n                }\n              }),\n              success: function (data) {\n                instance.confirmButtonLoading = false;\n                console.log(\"Success:\", data);\n                done();\n              },\n              error: (xhr, status, error) => {\n                instance.confirmButtonLoading = false;\n                console.error(\"Error:\", error);\n                this.$message({\n                  type: 'error',\n                  message: '触发失败'\n                });\n              }\n            });\n          } else {\n            done();\n          }\n        }\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: '触发成功！结果将在一小时内显示'\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./TriggerTraceDetail.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./TriggerTraceDetail.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TriggerTraceDetail.vue?vue&type=template&id=a8d2a524&scoped=true\"\nimport script from \"./TriggerTraceDetail.vue?vue&type=script&lang=js\"\nexport * from \"./TriggerTraceDetail.vue?vue&type=script&lang=js\"\nimport style0 from \"./TriggerTraceDetail.vue?vue&type=style&index=0&id=a8d2a524&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.11.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a8d2a524\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <el-row>\n      <el-col :span=\"24\"><div style=\"font-size: 30px\">Dubbo 基准测试</div></el-col>\n    </el-row>\n    <el-row>\n      <el-col :span=\"24\"><div style=\"font-size: 15px; text-align: right;\">Ubuntu 2核4线程7GB内存</div></el-col>\n    </el-row>\n    <el-row>\n      <el-divider><span style=\"font-size: 20px;\">提交性能趋势</span></el-divider>\n      <el-col :span=\"12\"><PullRequest></PullRequest></el-col>\n      <el-col :span=\"12\"><ScheduledTask></ScheduledTask></el-col>\n    </el-row>\n    <el-row>\n      <el-divider><span style=\"font-size: 20px;\">相同场景对比</span></el-divider>\n      <el-col :span=\"12\"><RpcTask></RpcTask></el-col>\n      <el-col :span=\"12\"><SerializationTask></SerializationTask></el-col>\n    </el-row>\n    <el-row>\n      <el-col :span=\"24\"><TraceDetail></TraceDetail></el-col>\n    </el-row>\n\n    <el-row style=\"margin-top: 100px\">\n      <el-divider><span style=\"font-size: 20px;\">手动触发对比</span></el-divider>\n      <el-col :span=\"24\"><trigger-trace-detail></trigger-trace-detail></el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport PullRequest from \"@/components/PullRequest.vue\";\nimport ScheduledTask from \"@/components/ScheduledTask.vue\";\nimport TraceDetail from \"@/components/TraceDetail.vue\";\nimport RpcTask from \"@/components/RpcTask.vue\";\nimport SerializationTask from \"@/components/SerializationTask.vue\";\nimport TriggerTraceDetail from \"@/components/TriggerTraceDetail.vue\";\n\nconst debounce = (fn, delay) => {\n  let timer = null;\n  return function () {\n    let context = this;\n    let args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(context, args);\n    }, delay);\n  }\n}\n\nconst _ResizeObserver = window.ResizeObserver;\nwindow.ResizeObserver = class ResizeObserver extends _ResizeObserver {\n  constructor(callback) {\n    callback = debounce(callback, 16);\n    super(callback);\n  }\n}\nexport default {\n  name: 'App',\n  components: {\n    TriggerTraceDetail,\n    SerializationTask,\n    RpcTask,\n    TraceDetail,\n    ScheduledTask,\n    PullRequest\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  //margin-top: 60px;\n}\n</style>\n","import mod from \"-!../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6e290970\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=6e290970&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/_vue-loader@15.11.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport echarts from 'echarts'\nimport $ from 'jquery'\n\nVue.prototype.$=$\nVue.prototype.$echarts = echarts\n\nVue.use(ElementUI);\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdubbo_benchmark\"] = self[\"webpackChunkdubbo_benchmark\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(20493); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","staticStyle","_v","staticRenderFns","_m","name","data","resultList","mounted","init","sampleEcharts","thrptEcharts","methods","jmh","$","ajax","type","async","url","success","res","JSON","parse","error","console","myChart","$echarts","document","getElementById","collect","filter","a","mode","reduce","acc","result","time","serialization","protocol","params","item","Number","score","Math","round","primaryMetric","scorePercentiles","commitId","key","push","templateList","formatDate","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","Object","entries","forEach","items","sortedItems","sort","b","map","i","seriesData","keys","index","value","showSymbol","hoverAnimation","symbolSize","markPoint","markLine","option","title","text","x","tooltip","trigger","formatter","axisValueLabel","marker","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","boundaryGap","yAxis","series","setOption","component","props","cascaderOptions","on","handleCascaderChange","model","selectedOptions","callback","$$v","expression","_s","leftTableTitle","leftTableDate","children","rightTableTitle","rightTableDate","rpcTable","serializationTable","disabledRoots","disabledChildren","multiple","label","tmpCascaderOptions","initTable","rpcResultList","serializationResultList","log","createSpanTree","spans","spanMap","Map","rootSpans","span","set","spanId_","toString","cost","endTime_","startTime_","parentSpanId_","get","parentSpan","selectedRoot","deepCopy2DArray","length","find","splice","myValue","includes","updateCascaderOptions","updateTable","disabled","arr","stringify","leftRpcFilter","prop","rightRpcFilter","spans_","leftSerializationFilter","rightSerializationFilter","subtext","timestampToTime","axisPointer","dataset","dimensions","source","barWidth","show","position","textStyle","fontSize","color","Y","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","open","leftSelectedOptions","rightSelectedOptions","triggerTable","$message","message","leftRpc","leftSerialization","rightRpc","rightSerialization","$createElement","$msgbox","showCancelButton","confirmButtonText","cancelButtonText","beforeClose","action","instance","done","leftSendDate","rightSendDate","confirmButtonLoading","beforeSend","xhr","setRequestHeader","btoa","status","then","catch","debounce","fn","delay","timer","context","args","arguments","clearTimeout","setTimeout","apply","_ResizeObserver","window","ResizeObserver","constructor","components","TriggerTraceDetail","SerializationTask","RpcTask","TraceDetail","ScheduledTask","PullRequest","Vue","prototype","echarts","use","ElementUI","config","productionTip","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}